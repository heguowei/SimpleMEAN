{
  "name": "node-df",
  "version": "0.1.1",
  "description": "A cross-platform Node.js wrapper around the standard Unix computer program, df.",
  "main": "lib/df.js",
  "scripts": {
    "test": "mocha -R spec test/"
  },
  "author": {
    "name": "Adriano Di Giovanni",
    "email": "me@adrianodigiovanni.com",
    "url": "http://adrianodigiovanni.com/"
  },
  "license": "MIT",
  "dependencies": {
    "underscore": "^1.6.0"
  },
  "directories": {
    "test": "test"
  },
  "devDependencies": {},
  "repository": {
    "type": "git",
    "url": "https://github.com/adriano-di-giovanni/node-df.git"
  },
  "keywords": [
    "node",
    "df",
    "diskfree"
  ],
  "bugs": {
    "url": "https://github.com/adriano-di-giovanni/node-df/issues"
  },
  "homepage": "https://github.com/adriano-di-giovanni/node-df",
  "readme": "# df\n\n`node-df` (abbreviation of **d**isk **f**ree) is a cross-platform Node.js wrapper around the standard Unix computer program, [df](http://en.wikipedia.org/wiki/Df_(Unix)).\n\n## Installation\n\n```\n$ npm install node-df\n```\n\n## Usage\n\n### Basic\n\n```javascript\nvar\n    df = require('node-df');\n\ndf(function (error, response) {\n    if (error) { throw error; }\n\n    console.log(JSON.stringify(response, null, 2));\n});\n```\n\nOutput from `df` looks like this:\n\n```json\n[\n  {\n    \"filesystem\": \"/dev/disk0s2\",\n    \"size\": 487546976,\n    \"used\": 164493356,\n    \"available\": 322797620,\n    \"capacity\": 0.34,\n    \"mount\": \"/\"\n  },\n  {\n    \"filesystem\": \"devfs\",\n    \"size\": 186,\n    \"used\": 186,\n    \"available\": 0,\n    \"capacity\": 1,\n    \"mount\": \"/dev\"\n  },\n  {\n    \"filesystem\": \"map -hosts\",\n    \"size\": 0,\n    \"used\": 0,\n    \"available\": 0,\n    \"capacity\": 1,\n    \"mount\": \"/net\"\n  },\n  {\n    \"filesystem\": \"map auto_home\",\n    \"size\": 0,\n    \"used\": 0,\n    \"available\": 0,\n    \"capacity\": 1,\n    \"mount\": \"/home\"\n  },\n  {\n    \"filesystem\": \"localhost:/CPYpGwk1x_UGJYGx-93flp\",\n    \"size\": 487546976,\n    \"used\": 487546976,\n    \"available\": 0,\n    \"capacity\": 1,\n    \"mount\": \"/Volumes/MobileBackups\"\n  }\n]\n```\n\nValues for `size`, `used` and `available` are expressed in `KiB` (1024 bytes).\n\nValue for `capacity` is a number between `0` and `1`. `capacity` is also known as `used%`\n\n`node-df` correctly parsed output from `df` unix program for filesystems and mount folders with whitespaces in the name.\n\n### Advanced\n\n```\nvar\n    options = {\n        file: '/',\n        prefixMultiplier: 'GB',\n        isDisplayPrefixMultiplier: true,\n        precision: 2\n    };\n\ndf(options, function (error, response) {\n    if (error) { throw error; }\n\n    console.log(JSON.stringify(response, null, 2));\n});\n```\n\nOutput from `df` now looks like this:\n\n```json\n[\n  {\n    \"filesystem\": \"/dev/disk0s2\",\n    \"size\": \"499.25GB\",\n    \"used\": \"168.44GB\",\n    \"available\": \"330.54GB\",\n    \"capacity\": 0.34,\n    \"mount\": \"/\"\n  }\n]\n```\n\n#### Options\n\n* **file**: output the amount of free space of the file system containing the specified file;\n* **prefixMultiplier**: convert `size`, `used` and `available` values from `KiB` to `MiB`, `GiB`, `PiB`, `EiB`, `ZiB`, `YiB`, `MB`, `GB`, `PB`, `EB`, `ZB`, `YB`;\n* **isDisplayPrefixMultiplier**: if `true`, values for `size`, `used` and `available` are converted to strings and `prefixMultiplier` is displayed (see example above).\n* **precision**: round `size`, `used` and `available` values to `precision` decimal digits.",
  "readmeFilename": "README.md",
  "_id": "node-df@0.1.1",
  "dist": {
    "shasum": "58312dd3f720b62a515c8b54733dad3215d3e211"
  },
  "_from": "node-df@^0.1.1",
  "_resolved": "https://registry.npmjs.org/node-df/-/node-df-0.1.1.tgz"
}
